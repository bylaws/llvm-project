REQUIRES: aarch64, x86
RUN: split-file %s %t.dir && cd %t.dir

RUN: llvm-mc -filetype=obj -triple=arm64ec-windows test.s -o test.obj
RUN: llvm-mc -filetype=obj -triple=arm64ec-windows arm64ec-stubs.s -o arm64ec-stubs.obj
RUN: llvm-mc -filetype=obj -triple=arm64ec-windows %S/Inputs/arm64ec-loadcfg.s -o arm64ec-loadcfg.obj
RUN: llvm-lib -machine:arm64ec -def:test.def -out:test-arm64ec.lib

RUN: lld-link -machine:arm64ec -dll -noentry -out:out.dll arm64ec-loadcfg.obj arm64ec-stubs.obj \
RUN:          test.obj test-arm64ec.lib

RUN: llvm-readobj --coff-imports out.dll | FileCheck -check-prefix=IMPORTS %s
IMPORTS:      Import {
IMPORTS-NEXT:   Name: test.dll
IMPORTS-NEXT:   ImportLookupTableRVA:
IMPORTS-NEXT:   ImportAddressTableRVA: 0x3000
IMPORTS-NEXT:   Symbol: myfunc (0)
IMPORTS-NEXT: }

RUN: llvm-readobj --headers out.dll | FileCheck -check-prefix=HEADERS %s
HEADERS:  LoadConfigTableRVA: 0x4000
HEADERS:  IATRVA: 0x3000
HEADERS:  IATSize: 0x1000

RUN: llvm-objdump -d out.dll | FileCheck -check-prefix=DISASM %s
DISASM:      180001000: 52800040     mov     w0, #0x2
DISASM-NEXT: 180001004: d65f03c0     ret
DISASM-NEXT: 180001008: 90000030     adrp    x16, 0x180005000
DISASM-NEXT: 18000100c: f9400210     ldr     x16, [x16]
DISASM-NEXT: 180001010: d61f0200     br      x16
DISASM-NEXT:                 ...
DISASM-NEXT: 180002000: ff 25 fa 0f 00 00            jmpq    *0xffa(%rip)            # 0x180003000

RUN: llvm-readobj --hex-dump=.test out.dll | FileCheck -check-prefix=TESTSEC %s
TESTSEC: 0x180008000 00500000 00300000 00200000 08100000

RUN: llvm-readobj --coff-load-config out.dll | FileCheck -check-prefix=LOADCONFIG %s
LOADCONFIG: AuxiliaryIAT: 0x5000

#--- test.s
    .section .test, "r"
    .globl arm64ec_data_sym
    .p2align 2, 0x0
arm64ec_data_sym:
    .rva __imp_myfunc
    .rva __imp_aux_myfunc
    .rva myfunc
    .rva "#myfunc"

#--- arm64ec-stubs.s
    .text
    .globl __icall_helper_arm64ec
    .p2align 2, 0x0
__icall_helper_arm64ec:
    mov w0, #2
    ret

    .section .cfg, "r"
    .globl __os_arm64x_dispatch_icall
    .p2align 2, 0x0
__os_arm64x_dispatch_icall:
    .xword 1

#--- test.def
NAME test.dll
EXPORTS
    myfunc
