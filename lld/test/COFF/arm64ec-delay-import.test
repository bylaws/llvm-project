REQUIRES: aarch64, x86
RUN: split-file %s %t.dir && cd %t.dir

RUN: llvm-mc -filetype=obj -triple=arm64ec-windows test.s -o test.obj
RUN: llvm-mc -filetype=obj -triple=arm64ec-windows arm64ec-stubs.s -o arm64ec-stubs.obj
RUN: llvm-mc -filetype=obj -triple=arm64ec-windows %S/Inputs/arm64ec-loadcfg.s -o arm64ec-loadcfg.obj
RUN: llvm-lib -machine:arm64ec -def:test.def -out:test-arm64ec.lib

RUN: lld-link -machine:arm64ec -dll -noentry -out:out.dll arm64ec-loadcfg.obj arm64ec-stubs.obj \
RUN:          test.obj test-arm64ec.lib -delayload:test.dll

RUN: llvm-readobj --hex-dump=.test out.dll | FileCheck -check-prefix=TESTSEC %s
TESTSEC: 0x180006000 98310000 60400000 00200000 10100000

RUN: llvm-objdump -d out.dll | FileCheck -check-prefix=DISASM %s
DISASM:      0000000180001000 <.text>:
DISASM-NEXT: 180001000: 52800040     mov     w0, #0x2                // =2
DISASM-NEXT: 180001004: d65f03c0     ret
DISASM-NEXT: 180001008: 52800060     mov     w0, #0x3                // =3
DISASM-NEXT: 18000100c: d65f03c0     ret
DISASM-NEXT: 180001010: d0000010     adrp    x16, 0x180003000
DISASM-NEXT: 180001014: f940ce10     ldr     x16, [x16, #0x198]
DISASM-NEXT: 180001018: d61f0200     br      x16
DISASM-NEXT: 18000101c: f000000b     adrp    x11, 0x180004000
DISASM-NEXT: 180001020: f940316b     ldr     x11, [x11, #0x60]
DISASM-NEXT: 180001024: 9000000a     adrp    x10, 0x180001000 <.text>
DISASM-NEXT: 180001028: 9100c14a     add     x10, x10, #0x30
DISASM-NEXT: 18000102c: 17fffff5     b       0x180001000 <.text>
DISASM-NEXT: 180001030: 52800080     mov     w0, #0x4                // =4
DISASM-NEXT: 180001034: d65f03c0     ret
DISASM-NEXT:                 ...
DISASM-NEXT: 180002000: ff 25 5a 20 00 00            jmpq    *0x205a(%rip)           # 0x180004060
DISASM-NEXT: 180002006: 48 8d 05 53 20 00 00         leaq    0x2053(%rip), %rax      # 0x180004060
DISASM-NEXT: 18000200d: e9 00 00 00 00               jmp     0x180002012 <.text+0x1012>
DISASM-NEXT: 180002012: 51                           pushq   %rcx
DISASM-NEXT: 180002013: 52                           pushq   %rdx
DISASM-NEXT: 180002014: 41 50                        pushq   %r8
DISASM-NEXT: 180002016: 41 51                        pushq   %r9
DISASM-NEXT: 180002018: 48 83 ec 48                  subq    $0x48, %rsp
DISASM-NEXT: 18000201c: 66 0f 7f 04 24               movdqa  %xmm0, (%rsp)
DISASM-NEXT: 180002021: 66 0f 7f 4c 24 10            movdqa  %xmm1, 0x10(%rsp)
DISASM-NEXT: 180002027: 66 0f 7f 54 24 20            movdqa  %xmm2, 0x20(%rsp)
DISASM-NEXT: 18000202d: 66 0f 7f 5c 24 30            movdqa  %xmm3, 0x30(%rsp)
DISASM-NEXT: 180002033: 48 8b d0                     movq    %rax, %rdx
DISASM-NEXT: 180002036: 48 8d 0d 7b 11 00 00         leaq    0x117b(%rip), %rcx      # 0x1800031b8
DISASM-NEXT: 18000203d: e8 c6 ef ff ff               callq   0x180001008 <.text+0x8>
DISASM-NEXT: 180002042: 66 0f 6f 04 24               movdqa  (%rsp), %xmm0
DISASM-NEXT: 180002047: 66 0f 6f 4c 24 10            movdqa  0x10(%rsp), %xmm1
DISASM-NEXT: 18000204d: 66 0f 6f 54 24 20            movdqa  0x20(%rsp), %xmm2
DISASM-NEXT: 180002053: 66 0f 6f 5c 24 30            movdqa  0x30(%rsp), %xmm3
DISASM-NEXT: 180002059: 48 83 c4 48                  addq    $0x48, %rsp
DISASM-NEXT: 18000205d: 41 59                        popq    %r9
DISASM-NEXT: 18000205f: 41 58                        popq    %r8
DISASM-NEXT: 180002061: 5a                           popq    %rdx
DISASM-NEXT: 180002062: 59                           popq    %rcx
DISASM-NEXT: 180002063: ff e0                        jmpq    *%rax

RUN: llvm-readobj --coff-imports out.dll | FileCheck -check-prefix=IMPORTS %s
IMPORTS:      DelayImport {
IMPORTS-NEXT:   Name: test.dll
IMPORTS-NEXT:   Attributes: 0x1
IMPORTS-NEXT:   ModuleHandle: 0x4058
IMPORTS-NEXT:   ImportAddressTable: 0x4060
IMPORTS-NEXT:   ImportNameTable: 0x31F8
IMPORTS-NEXT:   BoundDelayImportTable: 0x0
IMPORTS-NEXT:   UnloadDelayImportTable: 0x0
IMPORTS-NEXT:   Import {
IMPORTS-NEXT:     Symbol: myfunc (0)
IMPORTS-NEXT:     Address: 0x180002006
IMPORTS-NEXT:   }
IMPORTS-NEXT: }


#--- test.s
    .section .test      , "r"
    .globl arm64ec_data_sym
    .p2align 2, 0x0
arm64ec_data_sym:
    .rva __imp_myfunc
    .rva __imp_aux_myfunc
    .rva myfunc
    .rva "#myfunc"

#--- arm64ec-stubs.s
    .text
    .globl __icall_helper_arm64ec
    .p2align 2, 0x0
__icall_helper_arm64ec:
    mov w0, #2
    ret

    .text
    .globl "#__delayLoadHelper2"
    .p2align 2, 0x0
"#__delayLoadHelper2":
    mov w0, #3
    ret

    .section .cfg, "r"
    .globl __os_arm64x_dispatch_icall
    .p2align 2, 0x0
__os_arm64x_dispatch_icall:
    .xword 1

    .section .hybmp$x, "yi"
    .symidx __imp_myfunc
    .symidx myfunc_exit_thunk
    .word 4

    .section .wowthk$aa,"xr",discard,myfunc_exit_thunk
    .globl myfunc_exit_thunk
myfunc_exit_thunk:
    mov w0, #4
    ret

#--- test.def
NAME test.dll
EXPORTS
    mydata DATA
    myfunc
    otherfunc
