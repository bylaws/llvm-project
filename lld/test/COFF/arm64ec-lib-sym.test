REQUIRES: aarch64, x86
RUN: split-file %s %t.dir && cd %t.dir

RUN: llvm-mc -filetype=obj -triple=arm64ec-windows test.s -o test.obj
RUN: llvm-mc -filetype=obj -triple=arm64ec-windows testsym.s -o testsym.obj
RUN: llvm-mc -filetype=obj -triple=x86_64-windows testsym.s -o testsym-x86_64.obj
RUN: llvm-mc -filetype=obj -triple=arm64ec-windows %S/Inputs/arm64ec-loadcfg.s -o arm64ec-loadcfg.obj
RUN: llvm-lib -machine:arm64ec -out:testsym.lib testsym.obj
RUN: llvm-lib -machine:amd64 -out:testsym-x64.lib testsym-x86_64.obj

RUN: lld-link -machine:arm64ec -dll -noentry -out:test.dll test.obj testsym.lib arm64ec-loadcfg.obj

RUN: llvm-objdump -d test.dll | FileCheck -check-prefix=DISASM %s
DISASM:      0000000180001000 <.text>:
DISASM-NEXT: 180001000: d65f03c0     ret

RUN: lld-link -machine:arm64ec -dll -noentry -out:test-x64.dll test.obj testsym-x64.lib arm64ec-loadcfg.obj
RUN: llvm-objdump -d test-x64.dll | FileCheck -check-prefix=DISASM-X64 %s
DISASM-X64:      0000000180001000 <.text>:
DISASM-X64-NEXT: 180001000: c3                           retq

#--- test.s
    .section .test, "r"
    .rva "#testsym"

#--- testsym.s
    .text
    .globl "#testsym"
"#testsym":
    ret
